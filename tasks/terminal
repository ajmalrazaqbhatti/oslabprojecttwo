#!/usr/bin/env bash

# ----------------
# SCRIPT OVERVIEW:
# ----------------
# NexOS Task: Terminal
# A simple terminal emulator with restricted commands
# Implements standard close and minimize functionality:
# - When a task is closed, it exits with code 0
# - When a task is minimized, it exits with code 10
# ----------------

# ##########################################
# CONFIGURATION
# ##########################################
# Set the data directory
DATA_DIR="$HOME/oslabproject_data"
mkdir -p "$DATA_DIR/terminal_history"

# ##########################################
# FUNCTIONS
# ##########################################
# Function to run the terminal session
run_terminal_session() {
    local terminal_cmd="
    echo '=== NexOS Terminal ==='
    echo 'A simple terminal emulator. Safe commands only.'
    echo 'Commands are executed in a controlled environment.'
    echo 'Type \"exit\" to quit or \"options\" to show menu.'
    echo '----------------------------------------'

    # ##########################################
    # TERMINAL CONFIGURATION
    # ##########################################
    # Set up history file
    HISTFILE=\"$DATA_DIR/terminal_history/history.txt\"
    HISTSIZE=100
    touch \$HISTFILE

    # Create a list of allowed commands
    ALLOWED_COMMANDS=(
        \"ls\" \"pwd\" \"echo\" \"cat\" \"date\" \"cal\" \"clear\"
        \"whoami\" \"uname\" \"history\" \"help\" \"man\" \"df\"
        \"du\" \"free\" \"top\" \"ps\" \"grep\" \"find\" \"sort\"
        \"options\"
    )

    # ##########################################
    # COMMAND EXECUTION FUNCTIONS
    # ##########################################
    # Define the safe execution function
    safe_execute() {
        local cmd=\$1
        
        # Parse the command to get the first word (the command itself)
        local cmd_name=\$(echo \$cmd | awk '{print \$1}')
        
        # Check if the command is in the allowed list
        local is_allowed=0
        for allowed in \"\${ALLOWED_COMMANDS[@]}\"; do
            if [ \"\$cmd_name\" = \"\$allowed\" ]; then
                is_allowed=1
                break
            fi
        done
        
        if [ \$is_allowed -eq 1 ]; then
            if [ \"\$cmd_name\" = \"options\" ]; then
                # Show options menu using the template format
                echo
                echo \"OPTIONS:\"
                echo \"1. Close (exit)\"
                echo \"2. Minimize (return to main menu)\"
                echo -n \"Choose option: \"
                read option
                
                case \$option in
                    1)
                        echo \"Closing terminal...\"
                        sleep 1
                        exit 0
                        ;;
                    2)
                        echo \"Minimizing terminal...\"
                        sleep 1
                        exit 10  # Special exit code for minimize
                        ;;
                    *)
                        echo \"Invalid option. Continuing...\"
                        sleep 1
                        ;;
                esac
            else
                # Command is allowed, execute it and save to history
                echo \$cmd >> \$HISTFILE
                eval \$cmd
            fi
        else
            echo \"Command '\$cmd_name' is not allowed for security reasons.\"
            echo \"Type 'help' to see the list of allowed commands.\"
        fi
    }

    # ##########################################
    # HELP SYSTEM
    # ##########################################
    # Show help information
    show_help() {
        echo \"NexOS Terminal Help\"
        echo \"------------------\"
        echo \"The following commands are allowed:\"
        for cmd in \"\${ALLOWED_COMMANDS[@]}\"; do
            if [ \"\$cmd\" != \"options\" ]; then
                echo \"  \$cmd\"
            fi
        done
        echo \"------------------\"
        echo \"Type 'options' to show menu for closing or minimizing the terminal.\"
        echo \"This is a restricted terminal for demonstration purposes.\"
        echo \"Complex commands, scripts, and potentially dangerous operations are not permitted.\"
    }

    # ##########################################
    # MAIN TERMINAL LOOP
    # ##########################################
    # Main terminal loop
    while true; do
        # Display prompt
        echo -n \"nexos:\$PWD$ \"
        read -e command
        
        # Check for exit command
        if [ \"\$command\" = \"exit\" ]; then
            echo \"Closing terminal...\"
            sleep 1
            exit 0
        elif [ \"\$command\" = \"help\" ]; then
            show_help
        elif [ -n \"\$command\" ]; then
            # Execute the command safely
            safe_execute \"\$command\"
        fi
    done
    "

    # ##########################################
    # TERMINAL LAUNCH
    # ##########################################
    # Try to launch in gnome-terminal, fall back to xterm if not available
    gnome-terminal -- bash -c "$terminal_cmd" || xterm -e "$terminal_cmd"

    # Get the exit code from the terminal
    local exit_code=$?
    
    # Return the appropriate exit code
    return $exit_code
}

# ##########################################
# MAIN PROGRAM EXECUTION
# ##########################################
# Run the terminal session and capture its exit code
run_terminal_session
exit_code=$?

# Exit with the same code (10 for minimize, 0 for close)
exit $exit_code
